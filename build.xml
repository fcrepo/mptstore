<?xml version="1.0" encoding="UTF-8"?>
<project name="mptstore" default="dist" basedir=".">

  <!-- defines build options and lib paths -->
  <loadproperties srcFile="build.properties"/>

  <!-- defines mptstore.version -->
  <loadproperties srcFile="src/java/org/nsdl/mptstore/MPTStore.properties"/>

  <!-- makes the checkstyle task available to ant -->
  <taskdef resource="checkstyletask.properties" classpath="${lib.checkstyle}"/>

  <!-- jars required to compile -->
  <path id="compile.classpath">
    <pathelement location="${lib.log4j}"/>
  </path>

  <!-- jars required to compile and run tests -->
  <path id="test.classpath">
    <path refid="compile.classpath"/>
    <pathelement location="${lib.commons-collections}"/>
    <pathelement location="${lib.commons-dbcp}"/>
    <pathelement location="${lib.commons-pool}"/>
    <pathelement location="${lib.derby}"/>
    <pathelement location="${lib.junit}"/>
    <pathelement location="${lib.postgres-driver}"/>
    <pathelement location="build/classes"/>
    <pathelement location="${test.dir}/classes"/>
    <pathelement location="src/config"/>
    <pathelement location="${lib.oracle}"/>
  </path>

  <!-- classes -->
  <target name="classes" 
          depends="prepare"
          description="build all java classes into build/classes">
    <mkdir dir="build/classes"/>
    <javac srcdir="src/java" destdir="build/classes" 
           includes="**" 
           classpathref="compile.classpath"
           optimize="${optimize}" 
           debug="${debug}"
           source="${source}"
           target="${target}">
        <compilerarg value="-Xlint:-serial"/>
    </javac>
    <copy file="src/java/org/nsdl/mptstore/MPTStore.properties" 
          tofile="build/classes/org/nsdl/mptstore/MPTStore.properties"/>
    <propertyfile file="build/version.properties">
      <entry key="buildDate" type="date" value="now"/>
    </propertyfile>
    <replace file="build/classes/org/nsdl/mptstore/MPTStore.properties"
             value="value not found in version.properties"
             propertyFile="build/version.properties">
      <replacefilter token="@buildDate@" property="buildDate"/>
    </replace>
  </target>

  <!-- classes14 -->
  <target name="classes14" 
          depends="prepare"
          description="build all classes for Java 1.4 into build/classes14">
    <mkdir dir="build/classes14"/>
    <javac srcdir="src/java" destdir="build/classes14" 
           includes="**" 
           classpathref="compile.classpath"
           optimize="${optimize}" 
           debug="${debug}"
           source="${source}"
           target="jsr14">
        <compilerarg value="-Xlint:-serial"/>
    </javac>
    <copy file="src/java/org/nsdl/mptstore/MPTStore.properties" 
          tofile="build/classes14/org/nsdl/mptstore/MPTStore.properties"/>
    <propertyfile file="build/version.properties">
      <entry key="buildDate" type="date" value="now"/>
    </propertyfile>
    <replace file="build/classes14/org/nsdl/mptstore/MPTStore.properties"
             value="value not found in version.properties"
             propertyFile="build/version.properties">
      <replacefilter token="@buildDate@" property="buildDate"/>
    </replace>
  </target>



  <!-- test-classes -->
  <target name="test-classes"
          depends="classes"
          description="build all test classes into ${test.dir}/classes">
    <mkdir dir="${test.dir}/classes"/>
    <javac srcdir="src/test" destdir="${test.dir}/classes"
           includes="org/nsdl/mptstore/**"
           classpathref="test.classpath"
           optimize="${optimize}" debug="${debug}"/>
    <copy todir="${test.dir}" file="src/test/test.properties"/>
  </target>

  <!-- dist -->
  <target name="dist" 
          depends="classes" 
          description="Build the distribution in dist/">
    <mkdir dir="dist/lib"/>
    <copy todir="dist">
      <fileset dir=".">
        <include name="${lib.log4j}"/>
     </fileset>
    </copy>
    <copy todir="dist">
      <fileset dir="src/config"/>
    </copy>
    <jar jarfile="dist/mptstore-${mptstore.version}.jar" 
         basedir="build/classes"/>
  </target>

  <!-- dist14 -->
  <target name="dist14" 
          depends="classes14" 
          description="Build the distribution for Java 1.4 in dist/">
    <mkdir dir="dist/lib"/>
    <copy todir="dist">
      <fileset dir=".">
        <include name="${lib.log4j}"/>
     </fileset>
    </copy>
    <copy todir="dist">
      <fileset dir="src/config"/>
    </copy>
    <jar jarfile="dist/mptstore-${mptstore.version}.jar14" 
         basedir="build/classes14"/>
  </target>

  <!-- srcrelease -->
  <target name="srcrelease" 
          description="Build the source release in dist/release">
    <copy todir="dist/release/mptstore-${mptstore.version}-src">
      <fileset dir=".">
        <exclude name="build/**"/>
        <exclude name="dist/**"/>
      </fileset>
    </copy>
    <replace file="dist/release/mptstore-${mptstore.version}-src/README.txt"
             value="value not found in version.properties"
             propertyFile="src/java/org/nsdl/mptstore/MPTStore.properties">
      <replacefilter token="@mptstore.version@" property="mptstore.version"/>
    </replace>
    <zip zipfile="dist/release/mptstore-${mptstore.version}-src.zip" 
         basedir="dist/release" 
         includes="mptstore-${mptstore.version}-src/**"/>
    <delete dir="dist/release/mptstore-${mptstore.version}-src"/>
  </target>

  <!-- binrelease -->
  <target name="binrelease" 
          description="Build the binary release in dist/release"
          depends="dist,dist14,doc">
    <copy todir="dist/release/mptstore-${mptstore.version}">
      <fileset dir="dist">
        <exclude name="release/**"/>
      </fileset>
    </copy>
    <zip zipfile="dist/release/mptstore-${mptstore.version}.zip" 
         basedir="dist/release" 
         includes="mptstore-${mptstore.version}/**"/>
    <delete dir="dist/release/mptstore-${mptstore.version}"/>
  </target>

  <!-- release -->
  <target name="release" 
          depends="clean,qa,srcrelease,binrelease" 
          description="Build the source and binary releases in dist/release">
    <checksum fileext=".md5">
      <fileset dir="dist/release">
        <include name="*.zip"/>
      </fileset>
    </checksum>
  </target>

  <!-- doc -->
  <target name="doc"
          depends="prepare"
          description="Build all documentation in dist/doc">
    <copy todir="dist/doc">
      <fileset dir="src/doc"/>
    </copy>
    <replace file="dist/doc/index.html"
             value="value not found in version.properties"
             propertyFile="src/java/org/nsdl/mptstore/MPTStore.properties">
      <replacefilter token="@mptstore.version@" property="mptstore.version"/>
    </replace>
    <replace file="dist/doc/index.html"
             token="@lib.log4j@"
             value="${lib.log4j}"/>
    <javadoc packagenames="org.nsdl.mptstore.core, 
                           org.nsdl.mptstore.impl.derby,
                           org.nsdl.mptstore.impl.h2,
                           org.nsdl.mptstore.impl.postgres,
                           org.nsdl.mptstore.impl.oracle,
                           org.nsdl.mptstore.query,
                           org.nsdl.mptstore.query.component,
                           org.nsdl.mptstore.query.provider,
                           org.nsdl.mptstore.query.lang,
                           org.nsdl.mptstore.query.lang.spo,
                           org.nsdl.mptstore.rdf,
                           org.nsdl.mptstore.util"
             classpathref="compile.classpath"
             sourcepath="src/java"
             defaultexcludes="yes"
             destdir="dist/doc/api"
             windowtitle="MPTStore ${mptstore.version} Java API">
        <doctitle><![CDATA[<h1>MPTStore ${mptstore.version} Java API</h1>]]></doctitle>
    </javadoc>
  </target>

  <!-- qa -->
  <target name="qa"
          description="Run QA checks (tests and code convention checks)"
          depends="checkstyle, test">
  </target>


  <!-- test -->
  <target name="test"
          description="Run all tests in batch mode"
          depends="unit-test, integration-test">
  </target>

  <!-- unit-test -->
  <target name="unit-test" 
          description="Run unit tests in batch mode" 
          depends="test-classes">
    <junit printsummary="no" 
           haltonfailure="yes" 
           showoutput="true" 
           filtertrace="true">
      <formatter type="plain" usefile="false"/>
      <classpath refid="test.classpath"/>
      <sysproperty key="test.dir" value="${test.dir}"/>
      <sysproperty key="test.loglevel" value="${test.loglevel}"/>
      <test name="${unit.test}"/>
    </junit>
  </target>

  <!-- integration-test -->
  <target name="integration-test" 
          description="Run integration tests in batch mode" 
          depends="test-classes">
    <junit printsummary="no" 
           haltonfailure="yes" 
           showoutput="true" 
           filtertrace="true">
      <formatter type="plain" usefile="false"/>
      <classpath refid="test.classpath"/>
      <sysproperty key="test.dir" value="${test.dir}"/>
      <sysproperty key="test.loglevel" value="${test.loglevel}"/>
      <test name="${integration.test}"/>
    </junit>
  </target>

  <!-- checkstyle -->
  <target name="checkstyle" 
          description="Verify the source code meets our standards"
          depends="classes">
    <checkstyle config="src/doc/coding-standards.xml"
                classpath="build/classes">
      <fileset dir="src/java" includes="**/*.java"/>
      <formatter type="plain"/>
      <formatter type="xml" toFile="build/checkstyle-errors.xml"/>
    </checkstyle>
  </target>

  <!-- prepare -->
  <target name="prepare"
          description="Prepare for a build">
    <mkdir dir="build"/>
    <mkdir dir="dist"/>
  </target>

  <!-- clean -->
  <target name="clean"
          description="Remove all build-generated files and directories">
      <delete dir="build"/>
      <delete dir="dist"/>
  </target>
</project>
